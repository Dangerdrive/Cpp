### File: Zombie.hpp
#ifndef ZOMBIE_H
# define ZOMBIE_H

#include <string>

class Zombie {
private:
    std::string name;

public:
    Zombie();
    Zombie(std::string name);
    ~Zombie();

    void        announce();
    std::string getName() const;
};

Zombie* newZombie(std::string name);
void    randomChump( std::string name );

#endif


### File: main.cpp
#include <iostream>
#include "../includes/Zombie.hpp"

int main() {

Zombie* zombieCat = newZombie("Oli Zombie");
zombieCat->announce();

randomChump("Gin Zombie");

delete zombieCat;
}


### File: newZombie.cpp
#include <iostream>
#include "../includes/Zombie.hpp"

Zombie* newZombie(std::string name) {
    Zombie* new_zombie = new Zombie(name);
    return new_zombie;
}


### File: randomChump.cpp
#include <iostream>
#include "../includes/Zombie.hpp"

void randomChump(std::string name) {
    Zombie chump(name);
    chump.announce();
}


### File: Zombie.cpp
#include <iostream>
#include "../includes/Zombie.hpp"

Zombie::Zombie() : name("Unnamed") {}

Zombie::Zombie(std::string name) : name(name) {}

void Zombie::announce() {
    std::cout << name << ": BraiiiiiiinnnzzzZ..." << std::endl;
}

std::string Zombie::getName() const { return this->name; }

Zombie::~Zombie(){
std::cout << name << " was exterminated. Shoting in the head really works" << std::endl;
}


